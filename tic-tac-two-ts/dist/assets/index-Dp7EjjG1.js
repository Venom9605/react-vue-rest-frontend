var A=Object.defineProperty;var k=s=>{throw TypeError(s)};var F=(s,e,t)=>e in s?A(s,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):s[e]=t;var c=(s,e,t)=>F(s,typeof e!="symbol"?e+"":e,t),x=(s,e,t)=>e.has(s)||k("Cannot "+t);var d=(s,e,t)=>(x(s,e,"read from private field"),t?t.call(s):e.get(s)),w=(s,e,t)=>e.has(s)?k("Cannot add the same private member more than once"):e instanceof WeakSet?e.add(s):e.set(s,t),L=(s,e,t,r)=>(x(s,e,"write to private field"),r?r.call(s,t):e.set(s,t),t);(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const i of document.querySelectorAll('link[rel="modulepreload"]'))r(i);new MutationObserver(i=>{for(const n of i)if(n.type==="childList")for(const a of n.addedNodes)a.tagName==="LINK"&&a.rel==="modulepreload"&&r(a)}).observe(document,{childList:!0,subtree:!0});function t(i){const n={};return i.integrity&&(n.integrity=i.integrity),i.referrerPolicy&&(n.referrerPolicy=i.referrerPolicy),i.crossOrigin==="use-credentials"?n.credentials="include":i.crossOrigin==="anonymous"?n.credentials="omit":n.credentials="same-origin",n}function r(i){if(i.ep)return;i.ep=!0;const n=t(i);fetch(i.href,n)}})();function R(s,e,t){let r=document.createElement("div");r.classList.add("board");for(let i=0;i<5;i++){let n=document.createElement("div");n.classList.add("row");for(let a=0;a<5;a++){let h=document.createElement("div");h.classList.add("cell"),t(i,a)?h.classList.add("in-grid"):h.classList.remove("in-grid"),h.addEventListener("click",P=>{console.log(`Cell clicked at coordinates: (${i}, ${a})`),e(i,a,P)}),h.innerHTML=s[i][a]||"&nbsp;",n.appendChild(h)}r.appendChild(n)}return r}var l;class ${constructor(){w(this,l,[[],[],[],[],[]]);c(this,"gridStartX",1);c(this,"gridStartY",1);c(this,"isMovingGrid",!1);c(this,"onGridMove",null);c(this,"moveGridButton",null);c(this,"isMovingPiece",!1);c(this,"onPieceMove",null);c(this,"movePieceButton",null);c(this,"selectedPiece",null);c(this,"currentPlayer","X");c(this,"playerXPieces",5);c(this,"playerOPieces",5);c(this,"onMove",null)}getCurrentPlayerPieces(){return this.currentPlayer==="X"?this.playerXPieces:this.playerOPieces}makeAMove(e,t){if(this.getCurrentPlayerPieces()<=0){alert("You have no more pieces left to place.");return}d(this,l)[e][t]===void 0?(d(this,l)[e][t]=this.currentPlayer,this.currentPlayer==="X"?this.playerXPieces--:this.playerOPieces--,setTimeout(()=>{this.checkForGameEnd()||(this.currentPlayer=this.currentPlayer==="X"?"O":"X",this.onMove&&this.onMove())},1)):alert("This cell already has a piece in it.")}canMoveGrid(e,t,r=!1){return this.isMoveAdjacent(e,t)?this.isSamePosition(e,t)?(r||alert("You cannot move the grid to the same cell."),!1):this.isOutOfBounds(e,t)?(r||alert("You cannot move the grid out of bounds."),!1):!0:(r||alert("You can only move the grid to an adjacent cell."),!1)}isMoveAdjacent(e,t){return Math.abs(e-this.gridStartX)<=1&&Math.abs(t-this.gridStartY)<=1}isSamePosition(e,t){return e===this.gridStartX&&t===this.gridStartY}isOutOfBounds(e,t){return e<0||t<0||e>2||t>2}moveGrid(e,t){this.canMoveGrid(e,t)&&(this.gridStartX=e,this.gridStartY=t,this.isMovingGrid=!1,this.moveGridButton&&(this.moveGridButton.innerText="Move Grid"),this.onGridMove&&this.onGridMove(),setTimeout(()=>{this.checkForGameEnd()||(this.currentPlayer=this.currentPlayer==="X"?"O":"X",this.onMove&&this.onMove())},1))}isInGrid(e,t){return e>=this.gridStartX&&e<this.gridStartX+3&&t>=this.gridStartY&&t<this.gridStartY+3}movePiece(e,t,r,i){d(this,l)[e][t]&&!d(this,l)[r][i]&&this.isInGrid(r,i)&&this.isInGrid(e,t)?(d(this,l)[r][i]=d(this,l)[e][t],d(this,l)[e][t]=void 0,this.isMovingPiece=!1,this.selectedPiece=null,this.movePieceButton&&(this.movePieceButton.innerText="Move Piece"),this.onPieceMove&&this.onPieceMove(),setTimeout(()=>{this.checkForGameEnd()||(this.currentPlayer=this.currentPlayer==="X"?"O":"X",this.onMove&&this.onMove())},1)):alert("Can't move here!")}cellUpdateFn(e,t,r){if(this.isMovingGrid){this.moveGrid(e,t);return}if(this.isMovingPiece){this.selectedPiece?this.movePiece(this.selectedPiece.x,this.selectedPiece.y,e,t):d(this,l)[e][t]===this.currentPlayer?this.selectedPiece={x:e,y:t}:alert("You can only move your own pieces.");return}if(!this.isInGrid(e,t)){alert("You can only place pieces in the grid.");return}this.makeAMove(e,t),r.target.innerHTML=this.board[e][t]||"&nbsp;"}checkRows(e,t=3){for(let r=this.gridStartY;r<this.gridStartY+3;r++){let i=0;for(let n=this.gridStartX;n<this.gridStartX+3;n++)if(i=d(this,l)[n][r]===e?i+1:0,i>=t)return!0}return!1}checkColumns(e,t=3){for(let r=this.gridStartX;r<this.gridStartX+3;r++){let i=0;for(let n=this.gridStartY;n<this.gridStartY+3;n++)if(i=d(this,l)[r][n]===e?i+1:0,i>=t)return!0}return!1}checkDiagonals(e,t=3){for(let r=this.gridStartY;r<this.gridStartY+3;r++)for(let i=this.gridStartX;i<this.gridStartX+3;i++)if(this.checkDiagonalFrom(i,r,1,1,e,t)||this.checkDiagonalFrom(i,r,1,-1,e,t))return!0;return!1}checkDiagonalFrom(e,t,r,i,n,a){let h=0,P=e,b=t;for(;this.isInGrid(P,b);){if(h=d(this,l)[P][b]===n?h+1:0,h>=a)return!0;P+=r,b+=i}return!1}checkWin(e){return this.checkRows(e)||this.checkColumns(e)||this.checkDiagonals(e)}checkForGameEnd(){let e=this.checkWin("X"),t=this.checkWin("O");return e&&t?(alert("It's a tie!"),this.resetGame(),!0):e?(alert("X wins!"),this.resetGame(),!0):t?(alert("O wins!"),this.resetGame(),!0):!1}makeAiMove(){let e=[];for(let t=this.gridStartX;t<this.gridStartX+3;t++)for(let r=this.gridStartY;r<this.gridStartY+3;r++)d(this,l)[t][r]===void 0&&e.push({x:t,y:r});if(this.getCurrentPlayerPieces()>0&&e.length>0){for(let t of e){if(d(this,l)[t.x][t.y]=this.currentPlayer==="X"?"O":"X",this.checkWin(this.currentPlayer==="X"?"O":"X")){d(this,l)[t.x][t.y]=void 0,this.makeAMove(t.x,t.y);return}d(this,l)[t.x][t.y]=void 0}for(let t of e){if(d(this,l)[t.x][t.y]=this.currentPlayer,this.checkWin(this.currentPlayer)){d(this,l)[t.x][t.y]=void 0,this.makeAMove(t.x,t.y);return}d(this,l)[t.x][t.y]=void 0}if(e.length>0){let t=e[Math.floor(Math.random()*e.length)];this.makeAMove(t.x,t.y)}}else if(Math.floor(Math.random()*2)===0&&e.length>0){let r=[];for(let n=this.gridStartX;n<this.gridStartX+3;n++)for(let a=this.gridStartY;a<this.gridStartY+3;a++)d(this,l)[n][a]===this.currentPlayer&&r.push({x:n,y:a});let i=[];for(let n=this.gridStartX;n<this.gridStartX+3;n++)for(let a=this.gridStartY;a<this.gridStartY+3;a++)d(this,l)[n][a]===void 0&&i.push({x:n,y:a});if(r.length>0&&i.length>0){let n=r[Math.floor(Math.random()*r.length)],a=i[Math.floor(Math.random()*i.length)];this.movePiece(n.x,n.y,a.x,a.y)}}else{let r=[{x:this.gridStartX-1,y:this.gridStartY},{x:this.gridStartX+1,y:this.gridStartY},{x:this.gridStartX,y:this.gridStartY-1},{x:this.gridStartX,y:this.gridStartY+1},{x:this.gridStartX-1,y:this.gridStartY-1},{x:this.gridStartX-1,y:this.gridStartY+1},{x:this.gridStartX+1,y:this.gridStartY-1},{x:this.gridStartX+1,y:this.gridStartY+1}],i=[];for(let n of r)this.canMoveGrid(n.x,n.y,!0)&&i.push(n);if(i.length>0){let n=i[Math.floor(Math.random()*i.length)];this.moveGrid(n.x,n.y)}}}resetGame(){L(this,l,[[],[],[],[],[]]),this.gridStartX=1,this.gridStartY=1,this.isMovingGrid=!1,this.isMovingPiece=!1,this.selectedPiece=null,this.currentPlayer="X",this.playerXPieces=5,this.playerOPieces=5,this.onMove&&this.onMove(),this.onGridMove&&this.onGridMove(),this.onPieceMove&&this.onPieceMove(),typeof window<"u"&&window.resetTimer&&window.resetTimer()}get board(){return d(this,l)}}l=new WeakMap;let u=document.createElement("div");u.classList.add("game-container");document.body.appendChild(u);let O=document.createElement("h1");O.innerHTML="Tic Tac Two";u.appendChild(O);let o=new $,T=document.createElement("h2");T.innerHTML=`Current Player: ${o.currentPlayer} | Pieces left: ${B()}`;u.appendChild(T);let C=document.createElement("h2");C.id="timer";u.appendChild(C);let m=5*60,f;function E(){f&&clearInterval(f),f=window.setInterval(()=>{if(m<=0){clearInterval(f),alert("Time's up! It's a tie. Resetting game."),o.resetGame();return}m--,Y()},1e3)}function W(){f&&clearInterval(f),m=5*60,Y(),E()}function Y(){const s=Math.floor(m/60),e=m%60;C.innerHTML=`Time Remaining: ${s}:${e<10?"0":""}${e}`}function B(){return o.currentPlayer==="X"?o.playerXPieces:o.playerOPieces}function M(){let s=document.querySelector(".board");if(!s){console.error("Board container missing!");return}s.innerHTML="";let e=R(o.board,o.cellUpdateFn.bind(o),o.isInGrid.bind(o));if(!e||e.children.length===0){console.error("ERROR: Board did not generate correctly!");return}s.replaceWith(e),S.appendChild(e),console.log("Board rendered with",e.children.length,"rows.")}function y(){T.innerHTML=`Current Player: ${o.currentPlayer} | Pieces left: ${B()}`}let S=document.createElement("div");S.classList.add("board-container");u.appendChild(S);let I=document.createElement("div");I.classList.add("board");S.appendChild(I);M();let p=document.createElement("div");p.classList.add("button-container");u.appendChild(p);let g=document.createElement("button");g.id="move-grid-button";g.innerText="Move Grid";p.appendChild(g);o.moveGridButton=g;g.addEventListener("click",()=>{if(o.playerXPieces>3||o.playerOPieces>3){alert("Each player needs to place at least two pieces before moving the grid.");return}o.isMovingGrid=!o.isMovingGrid,g.innerText=o.isMovingGrid?"Stop Moving Grid":"Move Grid"});o.onGridMove=()=>{M(),y()};let v=document.createElement("button");v.id="move-piece-button";v.innerText="Move Piece";p.appendChild(v);o.movePieceButton=v;v.addEventListener("click",()=>{if(o.playerXPieces>3||o.playerOPieces>3){alert("Each player needs to place at least two pieces before moving a piece.");return}o.isMovingPiece=!o.isMovingPiece,v.innerText=o.isMovingPiece?"Stop Moving Piece":"Move Piece"});o.onPieceMove=()=>{M(),y()};o.onMove=y;let G=document.createElement("button");G.id="reset-button";G.innerText="Reset";p.appendChild(G);G.addEventListener("click",()=>{o.resetGame(),m=5*60,E()});let X=document.createElement("button");X.id="ai-move-button";X.innerText="Make AI Move";p.appendChild(X);X.addEventListener("click",()=>{o.makeAiMove(),M(),y()});E();Y();window.resetTimer=W;
